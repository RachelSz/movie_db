{"version":3,"sources":["components/MovieCard.js","components/MovieList.js","components/Loading.js","components/SearchInput.js","App.js","index.js"],"names":["MovieCard","movie","className","src","poster","alt","title","vote","MovieList","movies","map","id","Loading","SearchInput","handleSearch","handleReset","useState","query","setQuery","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","API_KEY","App","movieList","setMovieList","loading","setLoading","page","setPage","searchMode","setSearchMode","loadMovies","fetch","then","res","json","response","results","overview","vote_average","poster_path","prevMovies","useEffect","document","addEventListener","el","documentElement","console","log","scrollTop","clientHeight","scrollHeight","prevVal","ReactDOM","render","StrictMode","getElementById"],"mappings":"iTAiBeA,MAff,YAA6B,IAATC,EAAQ,EAARA,MAElB,OACE,sBAAKC,UAAU,aAAf,UACE,qBACEC,IAAG,0CAAqCF,EAAMG,QAC9CC,IAAKJ,EAAMK,QAEb,6BAAKL,EAAMK,QACX,6BAAKL,EAAMM,W,MCOFC,MAdb,YAA8B,IAAVC,EAAS,EAATA,OACpB,OACE,qBAAKP,UAAU,aAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACb,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,U,MCKRC,MAZf,WAEE,OACE,qBAAKV,UAAU,UAAf,yB,MCuCWW,MAxCf,YAAmD,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,YAAc,EACxBC,mBAAS,IADe,mBAC1CC,EAD0C,KACpCC,EADoC,KAmBhD,OACE,iCACE,uBACEC,KAAK,OACLC,MAAOH,EACPI,SArBN,SAA2BC,GACzBJ,EAASI,EAAEC,OAAOH,QAsBdI,UAnBN,SAAuBF,GAChBL,GACK,UAAVK,EAAEG,KAAmBX,EAAaG,IAkB9Bf,UAAU,eACVwB,YAAY,yBAEd,sBACExB,UAAU,YACVyB,QAnBN,WACET,EAAS,IACTH,KAeE,uBC5BAa,EAAU,mCA6GDC,MA3Gf,WAAgB,IAAD,EAEoBb,mBAAS,IAF7B,mBAEPc,EAFO,KAEIC,EAFJ,OAGiBf,oBAAS,GAH1B,mBAGNgB,EAHM,KAGGC,EAHH,OAIWjB,mBAAS,GAJpB,mBAINkB,EAJM,KAIAC,EAJA,OAKsBnB,oBAAS,GAL/B,mBAKPoB,EALO,KAKKC,EALL,KAgCb,SAASC,IACPL,GAAW,GAIXM,MAAM,GAAD,OAFU,8CAEV,iBAAmBL,EAAnB,oBAAmCN,IACrCY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJ,IAAMlC,EAASkC,EAASC,QAAQlC,KAAI,SAAAT,GAAK,MAAK,CAC5CU,GAAIV,EAAMU,GACVL,MAAQL,EAAMK,MACduC,SAAU5C,EAAM4C,SAChBtC,KAAMN,EAAM6C,aACZ1C,OAAQH,EAAM8C,gBAIhBd,GAAW,GACXF,GAAa,SAAAiB,GAAU,4BAAQA,GAAR,YAAuBvC,UAuCpD,OAnFAwC,qBAAW,WACNjB,GAAWI,GACdE,MACA,CAACJ,IAEHe,qBAAU,WAEI,IAATf,GACDgB,SAASC,iBAAiB,UAAU,SAAC7B,GAEnC,IAAM8B,EAAK9B,EAAEC,OAAO8B,gBAEpBC,QAAQC,IAAIH,EAAGI,UAAYJ,EAAGK,aAAcL,EAAGM,cAE5CN,EAAGI,UAAYJ,EAAGK,eAAiBL,EAAGM,eACvCvB,GAAQ,SAAAwB,GAAO,OAAIA,EAAU,KAC7BL,QAAQC,IAAI,SAASrB,SAO3B,CAACA,IA6DD,sBAAKhC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,CACEY,aAvCR,SAAsBG,GACpBc,EAAa,IACbM,GAAc,GACdJ,GAAW,GAGXM,MAAM,GAAD,OAFU,4CAEV,kBAAoBtB,EAApB,oBAAqCW,IACvCY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMlC,EAASkC,EAASC,QAAQlC,KAAI,SAAAT,GAAK,MAAK,CAC5CU,GAAIV,EAAMU,GACVL,MAAQL,EAAMK,MACduC,SAAU5C,EAAM4C,SAChBtC,KAAMN,EAAM6C,aACZ1C,OAAQH,EAAM8C,gBAIhBd,GAAW,GACXF,EAAatB,OAqBXM,YAjBR,WACEgB,EAAa,IACbM,GAAc,GAEF,IAATH,EACDI,IAEAH,EAAQ,QAcN,iCACA,cAAC,EAAD,CAAW1B,OAAQqB,IAClBE,GAAW,cAAC,EAAD,WCxGpB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASa,eAAe,W","file":"static/js/main.5cb25bd4.chunk.js","sourcesContent":["import \"./MovieCard.css\"\n\nfunction MovieCard({movie}) {\n\n  return (\n    <div className=\"movie-card\">\n      <img \n        src={`https://image.tmdb.org/t/p/w500/${movie.poster}`}\n        alt={movie.title} \n      />\n      <h2>{movie.title}</h2>\n      <h3>{movie.vote}</h3>\n    </div>\n  )\n\n}\n\nexport default MovieCard","import MovieCard from './MovieCard'\nimport \"./MovieList.css\"\n\n\n  function MovieList({movies}) {\n  return(\n    <div className=\"movie-list\">\n      {movies.map(movie => (\n          <MovieCard \n            key={movie.id}\n            movie={movie}\n          />\n      ))}\n\n    </div>\n  )\n}\n\nexport default MovieList","import \"./Loading.css\"\n\nfunction Loading() {\n\n  return (\n    <div className=\"loading\">\n    Loading...\n  </div>\n  )\n  \n  \n}\n\n\nexport default Loading","import {useState} from 'react'\n\nimport \"./SearchInput.css\"\n\nfunction SearchInput({handleSearch, handleReset}) {\n  const[query,setQuery] = useState('')\n\n  function handleInputChange(e) {\n    setQuery(e.target.value)\n  }\n\n  function handleKeyDown(e) {\n    if (!query) return\n    e.key === 'Enter' && handleSearch(query)\n    \n  }\n\n  function handleInputReset(){\n    setQuery('');\n    handleReset()\n  }\n\n\n  return (\n    <span>\n      <input \n        type='text' \n        value={query}\n        onChange={handleInputChange}\n        // pentru enter ==> \n        onKeyDown={handleKeyDown}\n        className='search-input'\n        placeholder='Type a movie name...'\n      />\n      <span \n        className='reset-btn'\n        onClick={handleInputReset}\n      >\n        Reset\n      </span>\n    </span>\n  )\n}\n\nexport default SearchInput","import './App.css';\nimport {useEffect, useState} from 'react'\nimport MovieList from \"./components/MovieList\"\nimport Loading from './components/Loading';\nimport SearchInput from './components/SearchInput';\n\nconst API_KEY = '90db55b9dcc02761d6a6051a96002649'\n\nfunction App() {\n\n  const[movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const[searchMode, setSearchMode] = useState(false);\n\n  useEffect( () => {\n    if(loading || searchMode) return\n    loadMovies()\n  },[page])\n\n  useEffect(() => {\n    // console.log('test')\n    if(page === 1) {\n      document.addEventListener('scroll', (e) => {\n\n        const el = e.target.documentElement\n        // scroll is at the bottom of the page\n        console.log(el.scrollTop + el.clientHeight, el.scrollHeight)\n\n        if(el.scrollTop + el.clientHeight === el.scrollHeight) {\n          setPage(prevVal => prevVal + 1)\n          console.log('ajunge',page)\n\n          \n        }\n      })\n    }\n    \n  },[page]) \n\n  function loadMovies() {\n    setLoading(true)\n\n    const apiURL = 'https://api.themoviedb.org/3/discover/movie'\n\n    fetch(`${apiURL}?page=${page}&api_key=${API_KEY }`)\n      .then(res => res.json())\n      .then(response =>{\n        // console.log('response',response)\n        const movies = response.results.map(movie => ({\n          id: movie.id,\n          title : movie.title,\n          overview: movie.overview,\n          vote: movie.vote_average,\n          poster: movie.poster_path,\n          \n        }))\n\n        setLoading(false)\n        setMovieList(prevMovies => [...prevMovies, ...movies])\n      })\n  }\n\n  function searchMovies(query) {\n    setMovieList([])\n    setSearchMode(true)\n    setLoading(true)\n    const apiURL = 'https://api.themoviedb.org/3/search/movie'\n\n    fetch(`${apiURL}?query=${query}&api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(response =>{\n        const movies = response.results.map(movie => ({\n          id: movie.id,\n          title : movie.title,\n          overview: movie.overview,\n          vote: movie.vote_average,\n          poster: movie.poster_path,\n          \n        }))\n\n        setLoading(false)\n        setMovieList(movies)\n      })\n  }\n\n  function handleReset() {\n    setMovieList([]);\n    setSearchMode(false);\n\n    if(page === 1) {\n      loadMovies()\n    } else{\n      setPage(1)\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SearchInput \n          handleSearch={searchMovies}\n          handleReset={handleReset}\n        />\n      </header>\n\n        <main>\n        <MovieList movies={movieList}/> \n        {loading && <Loading/>}\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}